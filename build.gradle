buildscript {
    repositories {
        maven { url "https://maven.aliyun.com/repository/central" }
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE")
        classpath("gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:1.7.1")
    }
}

wrapper {
    gradleVersion = '5.3.1'
}

subprojects {
    apply plugin: "java"
    apply plugin: "idea"
    apply plugin: "org.springframework.boot"

    group 'org.nkcoder'
    version '1.0'

    targetCompatibility = 1.11
    sourceCompatibility = 1.11

    repositories {
        mavenCentral()
        maven { url "https://maven.aliyun.com/repository/central" }
    }

    configurations {
        developmentOnly
        runtimeClasspath {
            extendsFrom developmentOnly
        }
    }

    apply from: rootProject.file('gradle/checkstyle/checkstyle.gradle')
    apply from: rootProject.file('gradle/spotbugs/spotbugs.gradle')

    compileJava {
        options.compilerArgs << '-parameters'
    }

    ext {
        springBootVersion = '2.1.6.RELEASE'
        junitVersion = '5.4.2'
        mysqlVersion = "8.0.15"
        jacksonVersion = '2.9.9'
        lombokVersion = '1.18.8'
        h2Version = '1.4.199'
    }

    dependencies {
        implementation("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
        implementation("org.projectlombok:lombok:$lombokVersion")
        annotationProcessor("org.projectlombok:lombok:$lombokVersion")
        implementation("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")
        implementation("com.fasterxml.jackson.module:jackson-module-parameter-names:$jacksonVersion")

        developmentOnly("org.springframework.boot:spring-boot-devtools:$springBootVersion")

        testImplementation("org.junit.jupiter:junit-jupiter:$junitVersion")
        testImplementation("org.springframework.boot:spring-boot-starter-test:$springBootVersion") {
            exclude group: 'junit', module: 'junit'
        }
    }

    // use system property when run from command: ./gradlew -Dspring.profiles.active=dev bootRun
    bootRun {
        systemProperties System.properties
    }
}